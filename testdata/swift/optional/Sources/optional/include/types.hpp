/* types.hpp - Type definitions for optional
 * Generated by sdp-gen - DO NOT EDIT
 * 
 * C++17 type definitions using:
 * - std::string for strings (null-terminated, length tracked)
 * - std::vector<T> for arrays (size tracked automatically)
 * - std::optional<T> for optional fields (type-safe)
 * 
 * Zero runtime dependencies, RAII memory management.
 */

#ifndef OPTIONAL_TYPES_HPP
#define OPTIONAL_TYPES_HPP

#include <cstdint>
#include <string>
#include <vector>
#include <optional>

namespace sdp {

/* Metadata */
struct Metadata {
    // user_id
    uint64_t user_id;
    // username
    std::string username;
};

/* DatabaseConfig */
struct DatabaseConfig {
    // host
    std::string host;
    // port
    uint16_t port;
};

/* CacheConfig */
struct CacheConfig {
    // size_mb
    uint32_t size_mb;
    // ttl_seconds
    uint32_t ttl_seconds;
};

/* TagList */
struct TagList {
    // items
    std::vector<std::string> items;
};

/* Request */
struct Request {
    // id
    uint32_t id;
    // metadata (optional)
    std::optional<Metadata> metadata;
};

/* Config */
struct Config {
    // name
    std::string name;
    // database (optional)
    std::optional<DatabaseConfig> database;
    // cache (optional)
    std::optional<CacheConfig> cache;
};

/* Document */
struct Document {
    // id
    uint32_t id;
    // tags (optional)
    std::optional<TagList> tags;
};

}  // namespace sdp

#endif  // OPTIONAL_TYPES_HPP
