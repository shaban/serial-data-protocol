// Code generated by sdp-gen. DO NOT EDIT.

/// Request Basic struct with optional metadata (RC Feature 1 test)
#[derive(Debug, Clone, PartialEq)]
pub struct Request {
    /// id Request ID (always present)
    pub id: u32,
    /// metadata Optional user metadata
    pub metadata: Option<Metadata>,
}

/// Metadata User metadata
#[derive(Debug, Clone, PartialEq)]
pub struct Metadata {
    /// user_id User ID
    pub user_id: u64,
    /// username Username
    pub username: String,
}

/// Config Complex example with nested optional fields
#[derive(Debug, Clone, PartialEq)]
pub struct Config {
    /// name Configuration name
    pub name: String,
    /// database Optional database settings
    pub database: Option<DatabaseConfig>,
    /// cache Optional cache settings
    pub cache: Option<CacheConfig>,
}

/// DatabaseConfig Database configuration
#[derive(Debug, Clone, PartialEq)]
pub struct DatabaseConfig {
    /// host Database host
    pub host: String,
    /// port Database port
    pub port: u16,
}

/// CacheConfig Cache configuration
#[derive(Debug, Clone, PartialEq)]
pub struct CacheConfig {
    /// size_mb Cache size in MB
    pub size_mb: u32,
    /// ttl_seconds Time to live in seconds
    pub ttl_seconds: u32,
}

/// Document Example with optional array (wrapped struct containing array)
#[derive(Debug, Clone, PartialEq)]
pub struct Document {
    /// id Document ID
    pub id: u32,
    /// tags Optional tags wrapper
    pub tags: Option<TagList>,
}

/// TagList Wrapper for tag array
#[derive(Debug, Clone, PartialEq)]
pub struct TagList {
    /// items Array of tags
    pub items: Vec<String>,
}
