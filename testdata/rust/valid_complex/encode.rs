// Code generated by sdp-gen. DO NOT EDIT.

use super::types::*;
use sdp::wire::{Encoder, Result};
use std::io::Write;

impl DeviceList {
    pub fn encode<W: Write>(&self, writer: &mut W) -> Result<()> {
        let mut enc = Encoder::new(writer);
        enc.write_u32(self.devices.len() as u32)?;
        for item in &self.devices {
            item.encode(&mut enc.writer)?;
        }
        Ok(())
    }
}

impl Device {
    pub fn encode<W: Write>(&self, writer: &mut W) -> Result<()> {
        let mut enc = Encoder::new(writer);
        enc.write_u32(self.id)?;
        enc.write_string(&self.name)?;
        enc.write_u32(self.parameters.len() as u32)?;
        for item in &self.parameters {
            item.encode(&mut enc.writer)?;
        }
        Ok(())
    }
}

impl Parameter {
    pub fn encode<W: Write>(&self, writer: &mut W) -> Result<()> {
        let mut enc = Encoder::new(writer);
        enc.write_string(&self.name)?;
        enc.write_f64(self.value)?;
        Ok(())
    }
}

