/* types.hpp - Type definitions for audiounit
 * Generated by sdp-gen - DO NOT EDIT
 * 
 * C++17 type definitions using:
 * - std::string for strings (null-terminated, length tracked)
 * - std::vector<T> for arrays (size tracked automatically)
 * - std::optional<T> for optional fields (type-safe)
 * 
 * Zero runtime dependencies, RAII memory management.
 */

#ifndef AUDIOUNIT_TYPES_HPP
#define AUDIOUNIT_TYPES_HPP

#include <cstdint>
#include <string>
#include <vector>
#include <optional>

namespace sdp {

/* Parameter */
struct Parameter {
    // address
    uint64_t address;
    // display_name
    std::string display_name;
    // identifier
    std::string identifier;
    // unit
    std::string unit;
    // min_value
    float min_value;
    // max_value
    float max_value;
    // default_value
    float default_value;
    // current_value
    float current_value;
    // raw_flags
    uint32_t raw_flags;
    // is_writable
    bool is_writable;
    // can_ramp
    bool can_ramp;
};

/* Plugin */
struct Plugin {
    // name
    std::string name;
    // manufacturer_id
    std::string manufacturer_id;
    // component_type
    std::string component_type;
    // component_subtype
    std::string component_subtype;
    // parameters
    std::vector<Parameter> parameters;
};

/* PluginRegistry */
struct PluginRegistry {
    // plugins
    std::vector<Plugin> plugins;
    // total_plugin_count
    uint32_t total_plugin_count;
    // total_parameter_count
    uint32_t total_parameter_count;
};

}  // namespace sdp

#endif  // AUDIOUNIT_TYPES_HPP
