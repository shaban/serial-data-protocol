/* types.hpp - Type definitions for arrays
 * Generated by sdp-gen - DO NOT EDIT
 * 
 * C++17 type definitions using:
 * - std::string for strings (null-terminated, length tracked)
 * - std::vector<T> for arrays (size tracked automatically)
 * - std::optional<T> for optional fields (type-safe)
 * 
 * Zero runtime dependencies, RAII memory management.
 */

#ifndef ARRAYS_TYPES_HPP
#define ARRAYS_TYPES_HPP

#include <cstdint>
#include <string>
#include <vector>
#include <optional>

namespace sdp {

/* ArraysOfPrimitives */
struct ArraysOfPrimitives {
    // u8_array
    std::vector<uint8_t> u8_array;
    // u32_array
    std::vector<uint32_t> u32_array;
    // f64_array
    std::vector<double> f64_array;
    // str_array
    std::vector<std::string> str_array;
    // bool_array
    std::vector<bool> bool_array;
};

/* Item */
struct Item {
    // id
    uint32_t id;
    // name
    std::string name;
};

/* ArraysOfStructs */
struct ArraysOfStructs {
    // items
    std::vector<Item> items;
    // count
    uint32_t count;
};

}  // namespace sdp

#endif  // ARRAYS_TYPES_HPP
