/* types.hpp - Type definitions for nested
 * Generated by sdp-gen - DO NOT EDIT
 * 
 * C++17 type definitions using:
 * - std::string for strings (null-terminated, length tracked)
 * - std::vector<T> for arrays (size tracked automatically)
 * - std::optional<T> for optional fields (type-safe)
 * 
 * Zero runtime dependencies, RAII memory management.
 */

#ifndef NESTED_TYPES_HPP
#define NESTED_TYPES_HPP

#include <cstdint>
#include <string>
#include <vector>
#include <optional>

namespace sdp {

/* Point */
struct Point {
    // x
    float x;
    // y
    float y;
};

/* Rectangle */
struct Rectangle {
    // top_left
    Point top_left;
    // bottom_right
    Point bottom_right;
    // color
    uint32_t color;
};

/* Scene */
struct Scene {
    // name
    std::string name;
    // main_rect
    Rectangle main_rect;
    // count
    uint32_t count;
};

}  // namespace sdp

#endif  // NESTED_TYPES_HPP
