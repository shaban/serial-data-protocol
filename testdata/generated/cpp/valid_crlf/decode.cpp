/* decode.cpp - Decoding implementations for valid_crlf
 * Generated by sdp-gen - DO NOT EDIT
 */

#include "decode.hpp"
#include "endian.hpp"
#include <cstring>

namespace sdp {

/* Forward declarations for internal decode helpers */
static Example example_decode_impl(const uint8_t* buf, size_t buf_len, size_t& offset);

static Example example_decode_impl(const uint8_t* buf, size_t buf_len, size_t& offset) {
    Example result;

    /* field */
    if (offset + 4 > buf_len) throw DecodeError("Buffer too small");
    result.field = SDP_LE32TOH(*(const uint32_t*)(buf + offset));
    offset += 4;

    return result;
}

Example example_decode(const uint8_t* buf, size_t buf_len) {
    size_t offset = 0;
    return example_decode_impl(buf, buf_len, offset);
}

}  // namespace sdp
