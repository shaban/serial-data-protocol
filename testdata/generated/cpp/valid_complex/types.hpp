/* types.hpp - Type definitions for valid_complex
 * Generated by sdp-gen - DO NOT EDIT
 * 
 * C++17 type definitions using:
 * - std::string for strings (null-terminated, length tracked)
 * - std::vector<T> for arrays (size tracked automatically)
 * - std::optional<T> for optional fields (type-safe)
 * 
 * Zero runtime dependencies, RAII memory management.
 */

#ifndef VALID_COMPLEX_TYPES_HPP
#define VALID_COMPLEX_TYPES_HPP

#include <cstdint>
#include <string>
#include <vector>
#include <optional>

namespace sdp {

/* Parameter */
struct Parameter {
    // name
    std::string name;
    // value
    double value;
};

/* Device */
struct Device {
    // id
    uint32_t id;
    // name
    std::string name;
    // parameters
    std::vector<Parameter> parameters;
};

/* DeviceList */
struct DeviceList {
    // devices
    std::vector<Device> devices;
};

}  // namespace sdp

#endif  // VALID_COMPLEX_TYPES_HPP
